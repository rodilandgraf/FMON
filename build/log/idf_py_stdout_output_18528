ï¿½ï¿½+Úšï¿½j%ï¿½(39) bï¿½ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7176
load:0x40078000,len:15564
ho 0 tail 12 room 4
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.3.2 2nd stage bootloader[0m
[0;32mI (31) boot: compile time May  4 2025 14:47:27[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (35) boot: chip revision: v3.1[0m
[0;32mI (39) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (44) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (48) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (53) boot: Enabling RNG early entropy source...[0m
[0;32mI (58) boot: Partition Table:[0m
[0;32mI (62) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (69) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (77) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (84) boot:  2 factory          factory app      00 00 00010000 00113000[0m
[0;32mI (92) boot:  3 spiffs           Unknown data     01 82 00123000 00019000[0m
[0;32mI (99) boot: End of partition table[0m
[0;32mI (103) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=2815ch (164188) map[0m
[0;32mI (168) esp_image: segment 1: paddr=00038184 vaddr=3ffb0000 size=06bech ( 27628) load[0m
[0;32mI (179) esp_image: segment 2: paddr=0003ed78 vaddr=40080000 size=012a0h (  4768) load[0m
[0;32mI (181) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=bf544h (783684) map[0m
[0;32mI (453) esp_image: segment 4: paddr=000ff56c vaddr=400812a0 size=17744h ( 96068) load[0m
[0;32mI (504) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (504) boot: Disabling RNG early entropy source...[0m
[0;32mI (517) cpu_start: Multicore app[0m
[0;32mI (525) cpu_start: Pro cpu start user code[0m
[0;32mI (525) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (525) app_init: Application information:[0m
[0;32mI (528) app_init: Project name:     camera_3[0m
[0;32mI (533) app_init: App version:      1[0m
[0;32mI (537) app_init: Compile time:     May  4 2025 14:47:52[0m
[0;32mI (543) app_init: ELF file SHA256:  11d62c18a...[0m
[0;32mI (549) app_init: ESP-IDF:          v5.3.2[0m
[0;32mI (553) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (558) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (563) efuse_init: Chip rev:         v3.1[0m
[0;32mI (568) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (575) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (581) heap_init: At 3FFC8850 len 000177B0 (93 KiB): DRAM[0m
[0;32mI (587) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (594) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (600) heap_init: At 400989E4 len 0000761C (29 KiB): IRAM[0m
[0;32mI (608) spi_flash: detected chip: generic[0m
[0;32mI (611) spi_flash: flash io: dio[0m
[0;33mW (615) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;33mW (628) i2c: This driver is an old driver, please migrate your application code to adapt `driver/i2c_master.h`[0m
[0;32mI (640) main_task: Started on CPU0[0m
[0;32mI (650) main_task: Calling app_main()[0m
[0;32mI (680) wifi:wifi driver task: 3ffd1aa4, prio:23, stack:6656, core=0[0m
[0;32mI (690) wifi:wifi firmware version: b0fd6006b[0m
[0;32mI (690) wifi:wifi certification version: v7.0[0m
[0;32mI (690) wifi:config NVS flash: enabled[0m
[0;32mI (690) wifi:config nano formating: disabled[0m
[0;32mI (690) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (700) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (700) wifi:Init management short buffer num: 32[0m
[0;32mI (710) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (710) wifi:Init static rx buffer size: 1600[0m
[0;32mI (720) wifi:Init static rx buffer num: 10[0m
[0;32mI (720) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (720) wifi_init: rx ba win: 6[0m
[0;32mI (730) wifi_init: accept mbox: 6[0m
[0;32mI (730) wifi_init: tcpip mbox: 32[0m
[0;32mI (740) wifi_init: udp mbox: 6[0m
[0;32mI (740) wifi_init: tcp mbox: 6[0m
[0;32mI (740) wifi_init: tcp tx win: 5760[0m
[0;32mI (750) wifi_init: tcp rx win: 5760[0m
[0;32mI (750) wifi_init: tcp mss: 1440[0m
[0;32mI (760) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (760) wifi_init: WiFi RX IRAM OP enabled[0m
[0;33mW (770) wifi:Password length matches WPA2 standards, authmode threshold changes from OPEN to WPA2[0m
[0;32mI (770) phy_init: phy_version 4840,02e0d70,Sep  2 2024,19:39:07[0m
[0;32mI (860) wifi:mode : sta (a0:b7:65:50:83:28)[0m
[0;32mI (860) wifi:enable tsf[0m
[0;32mI (870) WiFi: WiFi initialization complete.[0m
[0;32mI (870) WiFi: WiFi connecting...[0m
[0;32mI (880) wifi:new:<6,0>, old:<1,0>, ap:<255,255>, sta:<6,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (880) wifi:state: init -> auth (0xb0)[0m
[0;32mI (890) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (900) wifi:state: assoc -> run (0x10)[0m
[0;32mI (910) wifi:state: run -> init (0x2a0)[0m
[0;32mI (920) wifi:new:<6,0>, old:<6,0>, ap:<255,255>, sta:<6,0>, prof:1, snd_ch_cfg:0x0[0m
[0;33mW (920) WiFi: WiFi disconnected. Reconnecting...[0m
[0;32mI (2870) TFLite: Modelo TFLite inicializado com sucesso.[0m
[0;32mI (2870) SPIFFS: Inicializando SPIFFS[0m
[0;32mI (2880) SPIFFS: Sistema de arquivos montado. Total: 86846, Usado: 2259[0m
[0;32mI (2880) CAMERA: Iniciando MLX90640[0m
[0;32mI (3060) CAMERA: Pronto para captura[0m
[0;33mW (3340) WiFi: WiFi disconnected. Reconnecting...[0m
[0;32mI (3350) wifi:new:<6,0>, old:<6,0>, ap:<255,255>, sta:<6,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (3350) wifi:state: init -> auth (0xb0)[0m
[0;32mI (3360) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (3370) wifi:state: assoc -> run (0x10)[0m
[0;32mI (3410) wifi:connected with Batore, aid = 3, channel 6, BW20, bssid = 14:51:20:82:40:40[0m
[0;32mI (3410) wifi:security: WPA2-PSK, phy: bgn, rssi: -30[0m
[0;32mI (3410) wifi:pm start, type: 1[0m

[0;32mI (3410) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (3450) wifi:AP's beacon interval = 102400 us, DTIM period = 1[0m
[0;32mI (3880) TFLite: SaÃ­da bruta int8 â†’ sem fogo: 40, fogo: -128[0m
[0;32mI (3880) TFLite: Resultado: SEM FOGO
[0m
[0;32mI (3880) CAMERA: Matriz de imagem em escala de cinza:[0m
  5   4   4   5   5   5   4   4   5   4   3   3   3   4   3   2   4   4   3   3   4   4   4   4   5   5   4   4   4   4   4   3 
  5   6   6   2   6   6   6   3   5   5   4   1   4   4   2   1   4   5   4   2   4   5   5   3   5   6   4   1   4   4   3   1 
  7   8   7   7   8   9   8   8   7   6   4   3   4   4   4   4   5   5   4   4   5   5   4   5   4   4   3   2   3   3   2   2 
  9   9   9   7  10  10   8   6   8   7   4   2   5   5   4   3   5   6   5   3   6   6   4   3   4   5   3   1   3   4   2   1 
  9   9   8   9   9   9   9   9   8   8   5   4   5   6   6   5   6   6   5   6   5   6   5   5   4   4   2   2   3   3   2   3 
  9  10   8   6   9  10   9   8   9   9   5   2   4   4   4   3   6   7   6   4   6   6   5   3   5   4   3   1   3   3   2   0 
  7   8   9   8   9   9   9   9  10  10   6   4   4   3   2   2   7   7   7   7   7   7   5   5   3   3   2   2   2   2   1   2 
  7   8   8   6   9   9  10   8  10  10   8   4   4   5   3   1   6   8   6   5   7   7   4   2   3   3   2   1   3   3   2   0 
  8   8   8   7   9   9   9  10  10  10  10   9   9  10   9   8   8   9   8   8   8   7   4   4   3   3   2   2   2   2   1   1 
  8   8   8   5   8  10   9   7  10  11  10   9  10  10   9   8   9   9   8   7   9   9   7   4   4   3   2   0   2   3   2   0 
  9   8   8   8   8   8   9   9  10  10  10  10  10  10  10  10   9  10   9   9   9   9   8   8   5   4   2   2   2   2   1   2 
  9  10  10   6   8   9   8   7  10  10  10   9  10  10  10   8  10  10   9   8   9   9   8   6   6   5   3   0   2   3   1   0 
 10  10  10  10   9   9   7   8   9   9  10  10  10  10  10  10  10  10   9   9   9   9   8   7   6   5   2   3   3   3   1   1 
 10  11  10   8   9   9   8   6   9  10   9   8  10  10  10   9  10  10   9   7   9  10   8   6   6   5   2   0   2   3   2   0 
 10  10  10  10  10  10   8   8   9   8   8   8   9   9   8   8   9   9   9   8   9   9   8   8   5   4   2   2   2   3   1   2 
 10  11  10   9  10  10   8   6   9   9   8   7   8   8   5   3   7   9   9   7   9  10   9   7   5   4   2   0   2   3   1   0 
 10  10  10  10  10  10   7   5   6   6   5   5   4   3   2   3   7   9   8   9   9   9   8   8   4   3   2   2   2   2   1   2 
 10  11  10   8  10  10   7   4   5   5   3   2   3   4   2   2   7   9   9   7   9  10   8   5   3   4   2   0   2   3   1   0 
  7   8  10  10  10  10   8   6   6   4   3   3   3   2   2   2   8   9   9   9   9  10   7   4   3   3   2   2   2   2   1   2 
  7   9  10   9  10  10   9   7   7   7   2   1   2   3   2   0   9  10   9   7   9   9   5   3   4   4   2   0   2   3   1   0 
  5   8  10  10  10  10  10   8  10   9   4   1   1   1   2   3   9   9   9   9  10   9   5   4   3   3   2   2   2   2   1   1 
  6   8  10   8  10  11  10   8   9  10   3   0   2   2   2   1   9   9   9   7   9   9   4   1   3   3   2   0   2   3   1   0 
  5   6  10  10  10  10   7   7   7   9   5   1   1   1   2   6   9   9   8   9   8   5   3   3   3   3   1   2   2   3   0   1 
  6   6  10   6  10  10   6   4   7   8   3   1   1   2   4   3   9   9   9   7   5   6   3   1   3   3   1   0   2   3   1   0 

[0;32mI (4160) BMP: Imagem BMP criada com sucesso (1846 bytes)[0m
[0;32mI (4190) SPIFFS: Imagem salva em: /spiffs/imagem.bmp (1846 bytes)[0m
[0;32mI (4920) esp_netif_handlers: sta ip: 192.168.3.117, mask: 255.255.255.0, gw: 192.168.3.1[0m
[0;32mI (4920) WiFi: WiFi connected. Got IP: 192.168.3.117[0m
[0;32mI (5210) wifi:<ba-add>idx:0 (ifx:0, 14:51:20:82:40:40), tid:0, ssn:0, winSize:64[0m
[0;32mI (5240) mbedtls: ssl_tls.c:4606 => handshake
[0m
[0;32mI (5250) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5250) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5250) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST
[0m
[0;32mI (5260) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5260) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5270) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO
[0m
[0;32mI (5280) mbedtls: ssl_client.c:919 => write client hello
[0m
[0;32mI (5290) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (5290) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (5300) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (5300) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (5310) mbedtls: ssl_client.c:1012 <= write client hello
[0m
[0;32mI (5310) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5320) mbedtls: ssl_msg.c:2367 message length: 252, out_left: 252
[0m
[0;32mI (5330) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 252 (-0xffffff04)
[0m
[0;32mI (5330) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (5340) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO
[0m
[0;32mI (5350) mbedtls: ssl_tls12_client.c:1195 => parse server hello
[0m
[0;32mI (5350) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (5360) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5360) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (5370) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (5380) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (5380) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5390) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5390) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 102
[0m
[0;32mI (5400) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 102
[0m
[0;32mI (5410) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 97 (-0xffffff9f)
[0m
[0;32mI (5420) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5420) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (5430) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 21
[0m
[0;32mI (5430) mbedtls: ssl_tls12_client.c:1661 <= parse server hello
[0m
[0;32mI (5440) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5450) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5450) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE
[0m
[0;32mI (5460) mbedtls: ssl_tls.c:7962 => parse certificate
[0m
[0;32mI (5470) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (5470) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5480) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (5480) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (5490) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (5500) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5500) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5510) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 2630
[0m
[0;32mI (5520) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 2630
[0m
[0;32mI (5520) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 2625 (-0xfffff5bf)
[0m
[0;32mI (5530) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5560) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (5570) mbedtls: ssl_tls.c:8076 <= parse certificate
[0m
[0;32mI (5570) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5570) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5570) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_KEY_EXCHANGE
[0m
[0;32mI (5580) mbedtls: ssl_tls12_client.c:2089 => parse server key exchange
[0m
[0;32mI (5590) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (5590) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5600) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (5610) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (5610) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (5620) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5630) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5630) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 305
[0m
[0;32mI (5640) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 305
[0m
[0;32mI (5640) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 300 (-0xfffffed4)
[0m
[0;32mI (5650) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5660) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (5670) mbedtls: ssl_tls12_client.c:1805 ECDH curve: x25519
[0m
[0;32mI (5700) mbedtls: ssl_tls12_client.c:2459 <= parse server key exchange
[0m
[0;32mI (5700) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5700) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5710) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CERTIFICATE_REQUEST
[0m
[0;32mI (5720) mbedtls: ssl_tls12_client.c:2498 => parse certificate request
[0m
[0;32mI (5720) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (5730) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5740) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (5740) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (5750) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (5760) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5760) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (5770) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 9
[0m
[0;32mI (5770) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 9
[0m
[0;32mI (5780) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 4 (-0xfffffffc)
[0m
[0;32mI (5790) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (5790) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (5800) mbedtls: ssl_tls12_client.c:2660 <= parse certificate request
[0m
[0;32mI (5810) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5810) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5820) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO_DONE
[0m
[0;32mI (5820) mbedtls: ssl_tls12_client.c:2671 => parse server hello done
[0m
[0;32mI (5830) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (5840) mbedtls: ssl_msg.c:4257 reuse previously read message
[0m
[0;32mI (5840) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (5850) mbedtls: ssl_tls12_client.c:2699 <= parse server hello done
[0m
[0;32mI (5860) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5860) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5870) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_CERTIFICATE
[0m
[0;32mI (5880) mbedtls: ssl_tls.c:7557 => write certificate
[0m
[0;32mI (5880) mbedtls: ssl_tls.c:7568 <= skip write certificate
[0m
[0;32mI (5890) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (5890) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (5900) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_KEY_EXCHANGE
[0m
[0;32mI (5910) mbedtls: ssl_tls12_client.c:2714 => write client key exchange
[0m
[0;32mI (6300) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (6300) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (6300) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6300) mbedtls: ssl_msg.c:2367 message length: 42, out_left: 42
[0m
[0;32mI (6320) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 42 (-0xffffffd6)
[0m
[0;32mI (6320) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (6320) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (6330) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (6340) mbedtls: ssl_tls12_client.c:3209 <= write client key exchange
[0m
[0;32mI (6340) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6350) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (6350) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CERTIFICATE_VERIFY
[0m
[0;32mI (6360) mbedtls: ssl_tls12_client.c:3257 => write certificate verify
[0m
[0;32mI (6370) mbedtls: ssl_tls.c:7171 => derive keys
[0m
[0;32mI (6380) mbedtls: ssl_tls.c:7295 => calc verify
[0m
[0;32mI (6380) mbedtls: ssl_tls.c:7314 <= calc verify
[0m
[0;32mI (6400) mbedtls: ssl_tls.c:7222 <= derive keys
[0m
[0;32mI (6400) mbedtls: ssl_tls12_client.c:3279 <= skip write certificate verify
[0m
[0;32mI (6410) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6410) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (6420) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_CHANGE_CIPHER_SPEC
[0m
[0;32mI (6430) mbedtls: ssl_msg.c:5189 => write change cipher spec
[0m
[0;32mI (6430) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (6440) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (6440) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6450) mbedtls: ssl_msg.c:2367 message length: 6, out_left: 6
[0m
[0;32mI (6460) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 6 (-0xfffffffa)
[0m
[0;32mI (6460) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (6470) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (6470) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (6480) mbedtls: ssl_msg.c:5202 <= write change cipher spec
[0m
[0;32mI (6490) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6490) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (6500) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_FINISHED
[0m
[0;32mI (6510) mbedtls: ssl_tls.c:8307 => write finished
[0m
[0;32mI (6510) mbedtls: ssl_tls.c:8141 => calc finished tls
[0m
[0;32mI (6520) mbedtls: ssl_tls.c:8172 <= calc finished
[0m
[0;32mI (6520) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (6530) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (6540) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (6540) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (6550) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6550) mbedtls: ssl_msg.c:2367 message length: 45, out_left: 45
[0m
[0;32mI (6560) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 45 (-0xffffffd3)
[0m
[0;32mI (6570) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (6570) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (6580) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (6580) mbedtls: ssl_tls.c:8409 <= write finished
[0m
[0;32mI (6590) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6590) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (6600) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC
[0m
[0;32mI (6610) mbedtls: ssl_msg.c:5211 => parse change cipher spec
[0m
[0;32mI (6620) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (6620) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (6630) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (6630) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (6640) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (6650) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (6650) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (6660) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 6
[0m
[0;32mI (6660) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 6
[0m
[0;32mI (6670) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 1 (-0xffffffff)
[0m
[0;32mI (6680) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (6680) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (6690) mbedtls: ssl_msg.c:5259 <= parse change cipher spec
[0m
[0;32mI (6690) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6700) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (6710) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_FINISHED
[0m
[0;32mI (6710) mbedtls: ssl_tls.c:8422 => parse finished
[0m
[0;32mI (6720) mbedtls: ssl_tls.c:8141 => calc finished tls
[0m
[0;32mI (6730) mbedtls: ssl_tls.c:8172 <= calc finished
[0m
[0;32mI (6730) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (6740) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (6740) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (6750) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (6750) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (6760) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (6770) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (6770) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 45
[0m
[0;32mI (6780) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 45
[0m
[0;32mI (6790) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 40 (-0xffffffd8)
[0m
[0;32mI (6790) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (6800) mbedtls: ssl_msg.c:1510 => decrypt buf
[0m
[0;32mI (6810) mbedtls: ssl_msg.c:2121 <= decrypt buf
[0m
[0;32mI (6810) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (6820) mbedtls: ssl_tls.c:8492 <= parse finished
[0m
[0;32mI (6820) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6830) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (6830) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_FLUSH_BUFFERS
[0m
[0;32mI (6840) mbedtls: ssl_tls12_client.c:3587 handshake: done
[0m
[0;32mI (6850) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6850) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (6860) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HANDSHAKE_WRAPUP
[0m
[0;32mI (6860) mbedtls: ssl_tls.c:4617 <= handshake
[0m
[0;32mI (6870) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (6870) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (6880) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (6890) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (6890) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6900) mbedtls: ssl_msg.c:2367 message length: 213, out_left: 213
[0m
[0;32mI (6910) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 213 (-0xffffff2b)
[0m
[0;32mI (6910) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (6920) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (6920) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (6930) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (6930) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (6940) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (6950) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (6950) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (6950) mbedtls: ssl_msg.c:2367 message length: 293, out_left: 293
[0m
[0;32mI (6960) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 293 (-0xfffffedb)
[0m
[0;32mI (6970) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (6970) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (6980) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (6980) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (6990) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (6990) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (7020) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (7040) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (7040) mbedtls: ssl_msg.c:2367 message length: 1875, out_left: 1875
[0m
[0;32mI (7040) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 1875 (-0xfffff8ad)
[0m
[0;32mI (7040) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (7050) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (7060) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (7060) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (7070) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (7070) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (7080) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (7080) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (7090) mbedtls: ssl_msg.c:2367 message length: 54, out_left: 54
[0m
[0;32mI (7100) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 54 (-0xffffffca)
[0m
[0;32mI (7100) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (7110) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (7110) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (7130) mbedtls: ssl_msg.c:5791 => read
[0m
[0;32mI (7130) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (7130) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (7130) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (7140) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (7150) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (7150) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (7160) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (7160) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 547
[0m
[0;32mI (7170) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 547
[0m
[0;32mI (7180) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 542 (-0xfffffde2)
[0m
[0;32mI (7190) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (7200) mbedtls: ssl_msg.c:1510 => decrypt buf
[0m
[0;32mI (7200) mbedtls: ssl_msg.c:2121 <= decrypt buf
[0m
[0;32mI (7210) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (7210) mbedtls: ssl_msg.c:5951 <= read
[0m
[0;32mI (7210) HTTP: Status code: 200[0m
ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7176
load:0x40078000,len:15564
ho 0 tail 12 room 4
load:0x40080400,len:4
load:0x40080404,len:3904
entry 0x40080640
[0;32mI (31) boot: ESP-IDF v5.3.2 2nd stage bootloader[0m
[0;32mI (31) boot: compile time May  4 2025 14:47:27[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (35) boot: chip revision: v3.1[0m
[0;32mI (39) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (44) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (48) boot.esp32: SPI Flash Size : 2MB[0m
[0;32mI (53) boot: Enabling RNG early entropy source...[0m
[0;32mI (58) boot: Partition Table:[0m
[0;32mI (62) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (69) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (77) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (84) boot:  2 factory          factory app      00 00 00010000 00113000[0m
[0;32mI (92) boot:  3 spiffs           Unknown data     01 82 00123000 00019000[0m
[0;32mI (99) boot: End of partition table[0m
[0;32mI (103) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=2815ch (164188) map[0m
[0;32mI (168) esp_image: segment 1: paddr=00038184 vaddr=3ffb0000 size=06bech ( 27628) load[0m
[0;32mI (179) esp_image: segment 2: paddr=0003ed78 vaddr=40080000 size=012a0h (  4768) load[0m
[0;32mI (181) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=bf544h (783684) map[0m
[0;32mI (453) esp_image: segment 4: paddr=000ff56c vaddr=400812a0 size=17744h ( 96068) load[0m
[0;32mI (504) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (504) boot: Disabling RNG early entropy source...[0m
[0;32mI (517) cpu_start: Multicore app[0m
[0;32mI (525) cpu_start: Pro cpu start user code[0m
[0;32mI (525) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (525) app_init: Application information:[0m
[0;32mI (528) app_init: Project name:     camera_3[0m
[0;32mI (533) app_init: App version:      1[0m
[0;32mI (537) app_init: Compile time:     May  4 2025 14:47:52[0m
[0;32mI (543) app_init: ELF file SHA256:  11d62c18a...[0m
[0;32mI (549) app_init: ESP-IDF:          v5.3.2[0m
[0;32mI (553) efuse_init: Min chip rev:     v0.0[0m
[0;32mI (558) efuse_init: Max chip rev:     v3.99 [0m
[0;32mI (563) efuse_init: Chip rev:         v3.1[0m
[0;32mI (568) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (575) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (581) heap_init: At 3FFC8850 len 000177B0 (93 KiB): DRAM[0m
[0;32mI (587) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (594) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (600) heap_init: At 400989E4 len 0000761C (29 KiB): IRAM[0m
[0;32mI (608) spi_flash: detected chip: generic[0m
[0;32mI (611) spi_flash: flash io: dio[0m
[0;33mW (615) spi_flash: Detected size(4096k) larger than the size in the binary image header(2048k). Using the size in the binary image header.[0m
[0;33mW (628) i2c: This driver is an old driver, please migrate your application code to adapt `driver/i2c_master.h`[0m
[0;32mI (640) main_task: Started on CPU0[0m
[0;32mI (650) main_task: Calling app_main()[0m
[0;32mI (680) wifi:wifi driver task: 3ffd1aa4, prio:23, stack:6656, core=0[0m
[0;32mI (690) wifi:wifi firmware version: b0fd6006b[0m
[0;32mI (690) wifi:wifi certification version: v7.0[0m
[0;32mI (690) wifi:config NVS flash: enabled[0m
[0;32mI (690) wifi:config nano formating: disabled[0m
[0;32mI (690) wifi:Init data frame dynamic rx buffer num: 32[0m
[0;32mI (700) wifi:Init static rx mgmt buffer num: 5[0m
[0;32mI (700) wifi:Init management short buffer num: 32[0m
[0;32mI (710) wifi:Init dynamic tx buffer num: 32[0m
[0;32mI (710) wifi:Init static rx buffer size: 1600[0m
[0;32mI (720) wifi:Init static rx buffer num: 10[0m
[0;32mI (720) wifi:Init dynamic rx buffer num: 32[0m
[0;32mI (720) wifi_init: rx ba win: 6[0m
[0;32mI (730) wifi_init: accept mbox: 6[0m
[0;32mI (730) wifi_init: tcpip mbox: 32[0m
[0;32mI (740) wifi_init: udp mbox: 6[0m
[0;32mI (740) wifi_init: tcp mbox: 6[0m
[0;32mI (740) wifi_init: tcp tx win: 5760[0m
[0;32mI (750) wifi_init: tcp rx win: 5760[0m
[0;32mI (750) wifi_init: tcp mss: 1440[0m
[0;32mI (760) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (760) wifi_init: WiFi RX IRAM OP enabled[0m
[0;33mW (770) wifi:Password length matches WPA2 standards, authmode threshold changes from OPEN to WPA2[0m
[0;32mI (770) phy_init: phy_version 4840,02e0d70,Sep  2 2024,19:39:07[0m
[0;32mI (860) wifi:mode : sta (a0:b7:65:50:83:28)[0m
[0;32mI (870) wifi:enable tsf[0m
[0;32mI (870) WiFi: WiFi initialization complete.[0m
[0;32mI (870) WiFi: WiFi connecting...[0m
[0;32mI (880) wifi:new:<6,0>, old:<1,0>, ap:<255,255>, sta:<6,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (880) wifi:state: init -> auth (0xb0)[0m
[0;32mI (890) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (900) wifi:state: assoc -> run (0x10)[0m
[0;32mI (950) wifi:state: run -> init (0x2a0)[0m
[0;32mI (960) wifi:new:<6,0>, old:<6,0>, ap:<255,255>, sta:<6,0>, prof:1, snd_ch_cfg:0x0[0m
[0;33mW (960) WiFi: WiFi disconnected. Reconnecting...[0m
[0;32mI (2870) TFLite: Modelo TFLite inicializado com sucesso.[0m
[0;32mI (2870) SPIFFS: Inicializando SPIFFS[0m
[0;32mI (2880) SPIFFS: Sistema de arquivos montado. Total: 86846, Usado: 2259[0m
[0;32mI (2880) CAMERA: Iniciando MLX90640[0m
[0;32mI (3060) CAMERA: Pronto para captura[0m
[0;33mW (3380) WiFi: WiFi disconnected. Reconnecting...[0m
[0;32mI (3430) wifi:new:<6,0>, old:<6,0>, ap:<255,255>, sta:<6,0>, prof:1, snd_ch_cfg:0x0[0m
[0;32mI (3430) wifi:state: init -> auth (0xb0)[0m
[0;32mI (3450) wifi:state: auth -> assoc (0x0)[0m
[0;32mI (3460) wifi:state: assoc -> run (0x10)[0m
[0;32mI (3520) wifi:connected with Batore, aid = 3, channel 6, BW20, bssid = 14:51:20:82:40:40[0m
[0;32mI (3520) wifi:security: WPA2-PSK, phy: bgn, rssi: -16[0m
[0;32mI (3520) wifi:pm start, type: 1[0m

[0;32mI (3520) wifi:dp: 1, bi: 102400, li: 3, scale listen interval from 307200 us to 307200 us[0m
[0;32mI (3530) wifi:AP's beacon interval = 102400 us, DTIM period = 1[0m
[0;32mI (4540) esp_netif_handlers: sta ip: 192.168.3.117, mask: 255.255.255.0, gw: 192.168.3.1[0m
[0;32mI (4540) WiFi: WiFi connected. Got IP: 192.168.3.117[0m
[0;32mI (11330) TFLite: SaÃ­da bruta int8 â†’ sem fogo: 40, fogo: -128[0m
[0;32mI (11330) TFLite: Resultado: SEM FOGO
[0m
[0;32mI (11330) CAMERA: Matriz de imagem em escala de cinza:[0m
  5   8   5   3   5   8   5   3   5   7   4   3   3   6   3   2   4   6   4   3   3   6   4   3   4   7   4   4   4   7   3   2 
  9   6   5   5   9   7   6   5   9   6   4   3   6   4   2   1   5   4   3   3   6   5   3   3   7   5   4   3   7   5   3   3 
  7  10   7   5   8  10   9   8   8  10   5   4   4   6   4   3   4   7   5   3   5   7   6   4   5   8   4   2   4   6   3   1 
 10   9   7   6  10   9   8   8  10   8   6   4   7   5   4   4   7   6   5   4   8   6   5   4   7   6   3   2   6   4   2   2 
  8  10   8   7   8  10   7   7   8  10   7   6   5   7   6   5   6   9   6   5   6   8   6   4   5   7   3   3   2   5   3   2 
 10   8   7   8  10   9   7   6  10   8   7   6   7   4   3   3   6   7   7   6   9   7   6   5   8   5   2   2   6   3   1   1 
  8  10   7   6   9  10   8   6   8  10   9   8   5   7   3   2   4   7   7   6   7   9   6   5   4   6   2   2   3   5   2   1 
 11   8   6   6  10   9   8   7  10   8   8   7   9   6   5   4   6   6   6   6   9   7   5   4   5   4   2   1   6   3   2   1 
  8  10   7   6   7  10   8   7   8  10   9   9   9  10  10   9   9  10   9   8   8  10   7   5   4   6   3   1   2   5   2   1 
 11   9   7   6  10   8   8   7  10   9   9   9  11  10   9   9  11  10   8   8  10   9   8   6   8   4   2   2   6   3   1   1 
  9  11  10   9   8  10   8   7   9  10   9   8  10  12  10   9  10  11   9   8   9  10   9   8   8   9   3   2   3   5   2   1 
 11  10  10  10  11   9   7   7  10  10   9   9  12  10  10  10  11  10   9   8  11  10   8   8  10   8   4   2   5   3   1   2 
 10  11  10  10  10  12   9   8   8  10   9   8  10  12  10  10  10  12  10   9  10  11   9   8   8  10   4   2   3   5   2   1 
 12  10  10  10  13  10   9   8  10   9   9   8  11  10  10  10  12  10  10   9  10  10   9   8  10   8   4   2   6   4   1   1 
 10  12  10  10  10  13  10   9   9  10   9   8   9  10   9   8   8  10   9   8   9  10   9   8   8  10   3   2   3   6   2   1 
 12  10  11  10  14  11  10   9  10   9   8   7  10   9   6   5   7   7   7   8  10  10   9   8  10   7   3   2   6   3   2   1 
 10  12  11  10  11  13  10  10   6   8   5   4   4   6   3   2   4   7   8   8   9  10  10   8   8   9   3   2   3   6   2   1 
 13  10  10  10  14  11  10   9  10   5   4   3   6   4   3   2   6   5   7   8  10  10   9   8  10   6   3   2   5   3   1   1 
  7  10  10  10  10  14  10  10   7   9   4   3   3   6   2   1   4   7   8   8   9  11   9   8   6   7   3   2   3   6   2   1 
  9   6   8   8  13  10  10   9  11   6   3   2   6   3   1   1   6   6   7   8  11  10   9   8   9   5   2   1   5   3   1   0 
  4   7   8   8  10  12  10  10   9  11   6   5   2   4   1   1   4   7   8   8  10  11   9   9   5   7   3   1   3   5   1   1 
  8   5   7   9  13  11  10   9  12  10   9   5   5   2   1   1   6   6   8   8  11  10   9   7   7   5   2   2   5   3   1   1 
  4   7   8   9  10  13  10  10  10  12   9   9   3   4   1   1   5   7   9   8  10  11   8   5   4   7   3   2   2   5   2   0 
  9   6   7   8  14  11  10  10  12  10  10   5   6   2   1   1   6   6   8   8  11  10   7   4   7   5   2   1   5   3   0   0 

[0;32mI (11610) BMP: Imagem BMP criada com sucesso (1846 bytes)[0m
[0;32mI (11670) SPIFFS: Imagem salva em: /spiffs/imagem.bmp (1846 bytes)[0m
[0;32mI (11690) wifi:<ba-add>idx:0 (ifx:0, 14:51:20:82:40:40), tid:0, ssn:0, winSize:64[0m
[0;32mI (12120) mbedtls: ssl_tls.c:4606 => handshake
[0m
[0;32mI (12120) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12120) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12130) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HELLO_REQUEST
[0m
[0;32mI (12130) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12140) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12140) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_HELLO
[0m
[0;32mI (12150) mbedtls: ssl_client.c:919 => write client hello
[0m
[0;32mI (12160) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (12170) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (12170) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (12180) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (12180) mbedtls: ssl_client.c:1012 <= write client hello
[0m
[0;32mI (12190) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12190) mbedtls: ssl_msg.c:2367 message length: 252, out_left: 252
[0m
[0;32mI (12210) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 252 (-0xffffff04)
[0m
[0;32mI (12210) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (12220) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO
[0m
[0;32mI (12220) mbedtls: ssl_tls12_client.c:1195 => parse server hello
[0m
[0;32mI (12230) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (12240) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12240) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (12250) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (12250) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (12260) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12270) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12270) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 102
[0m
[0;32mI (12280) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 102
[0m
[0;32mI (12280) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 97 (-0xffffff9f)
[0m
[0;32mI (12290) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12300) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (12310) mbedtls: ssl_tls12_client.c:1447 server hello, total extension length: 21
[0m
[0;32mI (12310) mbedtls: ssl_tls12_client.c:1661 <= parse server hello
[0m
[0;32mI (12320) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12330) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12330) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CERTIFICATE
[0m
[0;32mI (12340) mbedtls: ssl_tls.c:7962 => parse certificate
[0m
[0;32mI (12340) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (12350) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12360) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (12360) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (12370) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (12380) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12380) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12390) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 2630
[0m
[0;32mI (12400) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 2630
[0m
[0;32mI (12400) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 2625 (-0xfffff5bf)
[0m
[0;32mI (12410) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12440) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (12450) mbedtls: ssl_tls.c:8076 <= parse certificate
[0m
[0;32mI (12450) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12450) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12460) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_KEY_EXCHANGE
[0m
[0;32mI (12470) mbedtls: ssl_tls12_client.c:2089 => parse server key exchange
[0m
[0;32mI (12470) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (12480) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12480) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (12490) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (12500) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (12500) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12510) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12520) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 305
[0m
[0;32mI (12520) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 305
[0m
[0;32mI (12530) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 300 (-0xfffffed4)
[0m
[0;32mI (12540) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12550) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (12550) mbedtls: ssl_tls12_client.c:1805 ECDH curve: x25519
[0m
[0;32mI (12580) mbedtls: ssl_tls12_client.c:2459 <= parse server key exchange
[0m
[0;32mI (12580) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12590) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12590) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CERTIFICATE_REQUEST
[0m
[0;32mI (12600) mbedtls: ssl_tls12_client.c:2498 => parse certificate request
[0m
[0;32mI (12610) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (12610) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12620) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (12630) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (12630) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (12640) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12650) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (12650) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 9
[0m
[0;32mI (12660) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 9
[0m
[0;32mI (12660) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 4 (-0xfffffffc)
[0m
[0;32mI (12670) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (12680) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (12680) mbedtls: ssl_tls12_client.c:2660 <= parse certificate request
[0m
[0;32mI (12690) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12690) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12700) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_HELLO_DONE
[0m
[0;32mI (12710) mbedtls: ssl_tls12_client.c:2671 => parse server hello done
[0m
[0;32mI (12720) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (12720) mbedtls: ssl_msg.c:4257 reuse previously read message
[0m
[0;32mI (12730) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (12730) mbedtls: ssl_tls12_client.c:2699 <= parse server hello done
[0m
[0;32mI (12740) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12750) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12750) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_CERTIFICATE
[0m
[0;32mI (12760) mbedtls: ssl_tls.c:7557 => write certificate
[0m
[0;32mI (12770) mbedtls: ssl_tls.c:7568 <= skip write certificate
[0m
[0;32mI (12770) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (12780) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (12780) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_KEY_EXCHANGE
[0m
[0;32mI (12790) mbedtls: ssl_tls12_client.c:2714 => write client key exchange
[0m
[0;32mI (13190) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (13190) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (13190) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13200) mbedtls: ssl_msg.c:2367 message length: 42, out_left: 42
[0m
[0;32mI (13210) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 42 (-0xffffffd6)
[0m
[0;32mI (13210) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (13220) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (13220) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (13230) mbedtls: ssl_tls12_client.c:3209 <= write client key exchange
[0m
[0;32mI (13240) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13240) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (13250) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CERTIFICATE_VERIFY
[0m
[0;32mI (13260) mbedtls: ssl_tls12_client.c:3257 => write certificate verify
[0m
[0;32mI (13260) mbedtls: ssl_tls.c:7171 => derive keys
[0m
[0;32mI (13270) mbedtls: ssl_tls.c:7295 => calc verify
[0m
[0;32mI (13280) mbedtls: ssl_tls.c:7314 <= calc verify
[0m
[0;32mI (13300) mbedtls: ssl_tls.c:7222 <= derive keys
[0m
[0;32mI (13300) mbedtls: ssl_tls12_client.c:3279 <= skip write certificate verify
[0m
[0;32mI (13300) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13310) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (13310) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_CHANGE_CIPHER_SPEC
[0m
[0;32mI (13320) mbedtls: ssl_msg.c:5189 => write change cipher spec
[0m
[0;32mI (13330) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (13330) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (13340) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13350) mbedtls: ssl_msg.c:2367 message length: 6, out_left: 6
[0m
[0;32mI (13350) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 6 (-0xfffffffa)
[0m
[0;32mI (13360) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (13370) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (13370) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (13380) mbedtls: ssl_msg.c:5202 <= write change cipher spec
[0m
[0;32mI (13380) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13390) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (13400) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_CLIENT_FINISHED
[0m
[0;32mI (13400) mbedtls: ssl_tls.c:8307 => write finished
[0m
[0;32mI (13410) mbedtls: ssl_tls.c:8141 => calc finished tls
[0m
[0;32mI (13420) mbedtls: ssl_tls.c:8172 <= calc finished
[0m
[0;32mI (13420) mbedtls: ssl_msg.c:2783 => write handshake message
[0m
[0;32mI (13430) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (13430) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (13440) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (13440) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13450) mbedtls: ssl_msg.c:2367 message length: 45, out_left: 45
[0m
[0;32mI (13460) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 45 (-0xffffffd3)
[0m
[0;32mI (13460) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (13470) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (13470) mbedtls: ssl_msg.c:2904 <= write handshake message
[0m
[0;32mI (13480) mbedtls: ssl_tls.c:8409 <= write finished
[0m
[0;32mI (13490) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13490) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (13500) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_CHANGE_CIPHER_SPEC
[0m
[0;32mI (13510) mbedtls: ssl_msg.c:5211 => parse change cipher spec
[0m
[0;32mI (13510) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (13520) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (13520) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (13530) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (13540) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (13540) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (13550) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (13560) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 6
[0m
[0;32mI (13560) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 6
[0m
[0;32mI (13570) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 1 (-0xffffffff)
[0m
[0;32mI (13580) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (13580) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (13590) mbedtls: ssl_msg.c:5259 <= parse change cipher spec
[0m
[0;32mI (13590) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13600) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (13610) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_SERVER_FINISHED
[0m
[0;32mI (13610) mbedtls: ssl_tls.c:8422 => parse finished
[0m
[0;32mI (13620) mbedtls: ssl_tls.c:8141 => calc finished tls
[0m
[0;32mI (13630) mbedtls: ssl_tls.c:8172 <= calc finished
[0m
[0;32mI (13630) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (13640) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (13640) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (13650) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (13650) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (13660) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (13670) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (13670) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 45
[0m
[0;32mI (13680) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 45
[0m
[0;32mI (13690) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 40 (-0xffffffd8)
[0m
[0;32mI (13690) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (13700) mbedtls: ssl_msg.c:1510 => decrypt buf
[0m
[0;32mI (13710) mbedtls: ssl_msg.c:2121 <= decrypt buf
[0m
[0;32mI (13710) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (13720) mbedtls: ssl_tls.c:8492 <= parse finished
[0m
[0;32mI (13720) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13730) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (13730) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_FLUSH_BUFFERS
[0m
[0;32mI (13740) mbedtls: ssl_tls12_client.c:3587 handshake: done
[0m
[0;32mI (13750) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13750) mbedtls: ssl_msg.c:2362 <= flush output
[0m
[0;32mI (13760) mbedtls: ssl_tls.c:4525 client state: MBEDTLS_SSL_HANDSHAKE_WRAPUP
[0m
[0;32mI (13770) mbedtls: ssl_tls.c:4617 <= handshake
[0m
[0;32mI (13770) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (13780) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (13780) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (13790) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (13790) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13800) mbedtls: ssl_msg.c:2367 message length: 213, out_left: 213
[0m
[0;32mI (13810) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 213 (-0xffffff2b)
[0m
[0;32mI (13810) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (13820) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (13820) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (13830) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (13830) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (13840) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (13850) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (13850) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13860) mbedtls: ssl_msg.c:2367 message length: 293, out_left: 293
[0m
[0;32mI (13860) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 293 (-0xfffffedb)
[0m
[0;32mI (13870) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (13880) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (13880) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (13890) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (13890) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (13900) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (13920) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (13940) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13940) mbedtls: ssl_msg.c:2367 message length: 1875, out_left: 1875
[0m
[0;32mI (13940) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 1875 (-0xfffff8ad)
[0m
[0;32mI (13950) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (13950) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (13960) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (13970) mbedtls: ssl_msg.c:6053 => write
[0m
[0;32mI (13970) mbedtls: ssl_msg.c:2943 => write record
[0m
[0;32mI (13970) mbedtls: ssl_msg.c:935 => encrypt buf
[0m
[0;32mI (13980) mbedtls: ssl_msg.c:1474 <= encrypt buf
[0m
[0;32mI (13990) mbedtls: ssl_msg.c:2353 => flush output
[0m
[0;32mI (13990) mbedtls: ssl_msg.c:2367 message length: 54, out_left: 54
[0m
[0;32mI (14000) mbedtls: ssl_msg.c:2374 ssl->f_send() returned 54 (-0xffffffca)
[0m
[0;32mI (14010) mbedtls: ssl_msg.c:2401 <= flush output
[0m
[0;32mI (14010) mbedtls: ssl_msg.c:3080 <= write record
[0m
[0;32mI (14020) mbedtls: ssl_msg.c:6075 <= write
[0m
[0;32mI (14030) mbedtls: ssl_msg.c:5791 => read
[0m
[0;32mI (14030) mbedtls: ssl_msg.c:4189 => read record
[0m
[0;32mI (14030) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (14040) mbedtls: ssl_msg.c:2295 in_left: 0, nb_want: 5
[0m
[0;32mI (14040) mbedtls: ssl_msg.c:2315 in_left: 0, nb_want: 5
[0m
[0;32mI (14050) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 5 (-0xfffffffb)
[0m
[0;32mI (14060) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (14060) mbedtls: ssl_msg.c:2155 => fetch input
[0m
[0;32mI (14070) mbedtls: ssl_msg.c:2295 in_left: 5, nb_want: 547
[0m
[0;32mI (14080) mbedtls: ssl_msg.c:2315 in_left: 5, nb_want: 547
[0m
[0;32mI (14080) mbedtls: ssl_msg.c:2318 ssl->f_recv(_timeout)() returned 542 (-0xfffffde2)
[0m
[0;32mI (14090) mbedtls: ssl_msg.c:2340 <= fetch input
[0m
[0;32mI (14100) mbedtls: ssl_msg.c:1510 => decrypt buf
[0m
[0;32mI (14100) mbedtls: ssl_msg.c:2121 <= decrypt buf
[0m
[0;32mI (14110) mbedtls: ssl_msg.c:4261 <= read record
[0m
[0;32mI (14110) mbedtls: ssl_msg.c:5951 <= read
[0m
[0;32mI (14120) HTTP: Status code: 200[0m
